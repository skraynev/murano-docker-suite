#  Licensed under the Apache License, Version 2.0 (the "License"); you may
#  not use this file except in compliance with the License. You may obtain
#  a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations
#  under the License.

Namespaces:
  =: io.murano.apps.docker
  std: io.murano

Name: DockerGlassFish

Extends: DockerApplication

Properties:
  name:
    Contract: $.string().notNull()

  publish:
    Contract: $.bool().notNull()
    Default: true

  password:
    Contract: $.string().notNull()


Methods:
  initialize:
    Body:
      - $._environment: $.find(std:Environment).require()
      - $._scope: switch($.publish, $ => public, not $ => internal)


  getContainer:
    Body:
      Return:
        name: $.name
        image: 'tutum/glassfish'
        env:
          GLASSFISH_PASS: $.password
        ports:
          - port: 4848
            scope: $._scope
          - port: 8080
            scope: $._scope
          - port: 8181
            scope: $._scope


  onInstallationStart:
    Body:
      - $._environment.reporter.report($this, 'Installing GlassFish')


  onInstallationFinish:
    Body:
      - If: $.publish
        Then:
          - $adminEndpoints: join(', ', $.applicationEndpoints.
              where($.scope = $this._scope and $.containerPort = 4848).
              select(format('http://{0}:{1}', $.address, $.port)))
          - $httpEndpoints: join(', ', $.applicationEndpoints.
              where($.scope = $this._scope and $.containerPort = 8080).
              select(format('http://{0}:{1}', $.address, $.port)))
          - $httpsEndpoints: join(', ', $.applicationEndpoints.
              where($.scope = $this._scope and $.containerPort = 8181).
              select(format('https://{0}:{1}', $.address, $.port)))

          - $._environment.reporter.report(
              $this,
              'GlassFish {0} is available at {1} (admin) and {2} + {3} (apps)'.format(
                $.name, $adminEndpoints, $httpEndpoints, $httpsEndpoints))
        Else:
          - $._environment.reporter.report($this, 'GlassFish {0} has deployed but is not accessible from outside'.format($.name))
